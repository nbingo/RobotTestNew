// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#define hi
#include "moveServos.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

moveServos::moveServos(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::intakeSubsystem.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void moveServos::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void moveServos::Execute() {
#ifdef hi
	if (Robot::oi->getDriveJoy()->GetPOV()==270||Robot::oi->getDriveJoy()->GetPOV()==90)  // goes middle
	{
	//Robot::intakeSubsystem->MoveServoLeft(140);
	//Robot::intakeSubsystem->MoveServoRight(50);

	Robot::intakeSubsystem->MoveServoLeft(90);
	Robot::intakeSubsystem->MoveServoRight(90);
	Wait(.05);
	//should open it
	}
	else if (Robot::oi->getDriveJoy()->GetPOV()==0) // goes out.
	{
		//Robot::intakeSubsystem->MoveServoLeft(180);
		//Robot::intakeSubsystem->MoveServoRight(0);

		Robot::intakeSubsystem->MoveServoLeft(0);
		Robot::intakeSubsystem->MoveServoRight(180);
		Wait(.05);
		//should close it, first action
	}
	else if (Robot::oi->getDriveJoy()->GetPOV()==180) //currently goes up
	{
		//Robot::intakeSubsystem->MoveServoLeft(00);
		//Robot::intakeSubsystem->MoveServoRight(180);

		Robot::intakeSubsystem->MoveServoLeft(180);
		Robot::intakeSubsystem->MoveServoRight(0);
		//should go to middle
		Wait(.05);
	}
	SmartDashboard::PutNumber("POV thing", Robot::oi->getDriveJoy()->GetPOV());
#endif


	//225-315 left
	//315-45 top
	//right: 45  -135
	//bottom: 135-225
}

// Make this return true when this Command no longer needs to run execute()
bool moveServos::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void moveServos::End() {
	//Robot::intakeSubsystem->ChangeServoSpeed(0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void moveServos::Interrupted() {
	//Robot::intakeSubsystem->ChangeServoSpeed(0);
}
